//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TaskManager
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    
    public partial class User
    {
        public int ID { get; set; }
        public string Username { get; set; }
        public string Email { get; set; }
        public string Password { get; set; }
        public string Tasks { get; set; }
        public string TasksSharedBy { get; set; }

        public User(int ID, string Username, string Email, string Password)
        {
            this.ID = ID;
            this.Username = Username;
            this.Email = Email;
            this.Password = Password;
        }
        public User() { }

        public void DeleteTask(int taskID)
        {
            if (Tasks != null && !String.IsNullOrEmpty(Tasks))
            {
                int taskPos = -1;

                List<string> tasks = Tasks.Split(',').ToList();

                for (int i = 0; i < tasks.Count; i++)
                {
                    if (taskID.ToString() == tasks[i])
                    {
                        tasks.Remove(tasks[i]);
                        taskPos = i;
                        break;
                    }
                }

                string newTasks = "";

                foreach (string str in tasks)
                    newTasks += str + ",";

                Tasks = newTasks.TrimEnd(',');

                //remove shared
                List<string> shared = TasksSharedBy.Split(',').ToList();

                for (int i = 0; i < shared.Count; i++)
                {
                    if (i == taskPos)
                    {
                        shared.Remove(shared[i]);
                        break;
                    }
                }

                string newShared = "";

                foreach (string str in shared)
                    newShared += str + ",";

                TasksSharedBy = newShared.TrimEnd(',');
            }
        }
        public void AddNewTask(int taskID, int sharedID)
        {
            if (String.IsNullOrEmpty(Tasks))
            {
                Tasks = taskID.ToString();
            }
            else
            {
                if (!Tasks.Contains(','))
                    Tasks += "," + taskID.ToString();
                else
                {
                    string[] tasksIDs = Tasks.Split(',');

                    foreach (string str in tasksIDs)
                        if (str == taskID.ToString())
                            return;

                    Tasks += "," + taskID.ToString();
                }
            }

            if (String.IsNullOrEmpty(TasksSharedBy))
                TasksSharedBy = sharedID.ToString();
            else
                TasksSharedBy += "," + sharedID.ToString();
        }
    }
}
